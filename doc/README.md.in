# data-true

DataTrue is a framework for ensuring a set of related JavaScript objects are always in a valid state where "valid" is defined by a set of functions you specify. Think of it sort of like constrains and trigger in SQL, but for JavaScript objects.

> DataTrue is ready for cautious production use, but has not had extensive real-world testing. See _Current Status_ below for details.

## Usage

### Basic

#### In the Browser
{{{../examples/basic.html}}}

#### On the Server
{{{../examples/basic.js}}}

### Atomic Data Manipulation
You can delay validation using atomicSet() for complex state transitions
{{{../examples/atomic.js}}}

### Multiple Exceptions
{{{../examples/multi-ex.js}}}

### Minimizing calls to validator functions
{{{../examples/reuse.js}}}

### Instantiating multiple constrained objects
{{{../examples/multi-construct.js}}}

#### The 'instanceof' SNAFU

### get/set Hooks
{{{../examples/hooks.js}}}

### Constructor and Prototype
{{{../examples/const-proto.js}}}

## Limitations, Gotchas and Stuff You Might Have To Do Differently

### Always use 'this' in AtomicSet()
AtomicSet prevents modification of an object and any DataTrue objects that object holds references to by running both your setter function and validation on "fake" objects. These fake objects proxy values from the real DataTrue objects when you read them but don't actually set them on the real DataTrue objects unless all the appropriate validation functions return without throwing an exception. However, there is no way to prevent you from modifying the real objects using references to them other than 'this'.

{{{../examples/always-use-this.js}}}


## Roadmap

### Arrays
### Serialization
### Persistence / DataTrue Server
### Query Language, Sparse Objects and memory-aware data structures (The Pipe Dream)

## Current Status (Alpha/Experimental)

## Contributing
